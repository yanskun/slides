name: Deploy Slidev Projects

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      projects: ${{ steps.changes.outputs.projects }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed projects
        id: changes
        run: |
          # Get all directories that contain package.json with @slidev/cli
          projects=()
          for dir in */; do
            if [[ -f "${dir}package.json" ]] && grep -q "@slidev/cli" "${dir}package.json"; then
              # Check if this project has changes
              if git diff --name-only HEAD~1..HEAD | grep -q "^${dir}"; then
                projects+=("${dir%/}")
              fi
            fi
          done
          
          # If no changes detected, deploy all projects (for manual runs)
          if [[ ${#projects[@]} -eq 0 ]] && [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            for dir in */; do
              if [[ -f "${dir}package.json" ]] && grep -q "@slidev/cli" "${dir}package.json"; then
                projects+=("${dir%/}")
              fi
            done
          fi
          
          printf '%s\n' "${projects[@]}" | jq -R -s -c 'split("\n")[:-1]' > projects.json
          echo "projects=$(cat projects.json)" >> $GITHUB_OUTPUT
          echo "Detected projects: $(cat projects.json)"

  build-and-deploy:
    needs: detect-changes
    if: needs.detect-changes.outputs.projects != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ${{ fromJson(needs.detect-changes.outputs.projects) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: ${{ matrix.project }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ matrix.project }}
        run: npm ci

      - name: Build slides
        working-directory: ${{ matrix.project }}
        run: npm run build

      - name: Setup Pages
        if: matrix.project == fromJson(needs.detect-changes.outputs.projects)[0]
        uses: actions/configure-pages@v4

      - name: Upload artifact
        if: matrix.project == fromJson(needs.detect-changes.outputs.projects)[0]
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ matrix.project }}/dist

      - name: Deploy to GitHub Pages
        if: matrix.project == fromJson(needs.detect-changes.outputs.projects)[0]
        id: deployment
        uses: actions/deploy-pages@v4